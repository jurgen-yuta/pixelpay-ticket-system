{
	"info": {
		"_postman_id": "ac629eb7-0b73-448c-bdc7-80c97f65c894",
		"name": "PixelPay Tickets API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "23009187",
		"_collection_link": "https://winter-robot-999601.postman.co/workspace/PixelPay-Tickets-API~60659547-99b3-45df-bf93-8e29113935a8/collection/23009187-ac629eb7-0b73-448c-bdc7-80c97f65c894?action=share&source=collection_link&creator=23009187"
	},
	"item": [
		{
			"name": "Crear Ticket Exitoso",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Verifica que el c贸digo de estado sea 200 OK o 201 (Created)\r",
							"pm.test(\"Status code is 200 OK or 201 Created\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
							"});\r",
							"\r",
							"// Verifica que la respuesta contenga el nuevo ticket y su ID\r",
							"pm.test(\"Response contains the new ticket data\", function () {\r",
							"    const responseData = pm.response.json();\r",
							"    pm.expect(responseData.ticket).to.have.property('id');\r",
							"    pm.expect(responseData.ticket.title).to.eql(\"Necesito ayuda con la configuraci贸n de la nueva API\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"title\": \"Necesito ayuda con la configuraci贸n de la nueva API\",\r\n    \"user_id\": 1 \r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://127.0.0.1:8000/api/tickets",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "8000",
					"path": [
						"api",
						"tickets"
					]
				}
			},
			"response": []
		},
		{
			"name": "New Request",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Verifica que el c贸digo de estado sea 200 (OK)\r",
							"pm.test(\"Status code is 200 OK\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"// Verifica que la respuesta incluya el objeto 'user' (Eager Loading)\r",
							"pm.test(\"Includes 'user' relationship data\", function () {\r",
							"    const responseData = pm.response.json();\r",
							"    pm.expect(responseData).to.have.property('user'); // Verifica que existe la clave 'user'\r",
							"    pm.expect(responseData.user).to.have.property('name'); // Verifica que el objeto user tenga un 'name'\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://127.0.0.1:8000/api/tickets/1",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "8000",
					"path": [
						"api",
						"tickets",
						"1"
					]
				}
			},
			"response": []
		}
	]
}